name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  GO_VERSION: '1.25'

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/melodia-api:latest
          ${{ secrets.DOCKER_USERNAME }}/melodia-api:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to production server
      run: |
        echo "Deploying to production server..."
        # AquÃ­ puedes agregar comandos para deployar a tu servidor
        # Por ejemplo, usando SSH, kubectl, o cualquier otra herramienta
        echo "Deployment completed successfully!"

    - name: Notify deployment success
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸš€ **Deployment Successful!**
            
            âœ… **Version**: ${{ github.sha }}
            âœ… **Image**: ${{ secrets.DOCKER_USERNAME }}/melodia-api:${{ github.sha }}
            âœ… **Environment**: Production
            
            Deployment completed at ${{ github.event.head_commit.timestamp }}
            
            _Generated by GitHub Actions_`
          });
