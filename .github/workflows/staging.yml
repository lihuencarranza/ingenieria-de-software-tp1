name: Deploy to Staging

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

env:
  GO_VERSION: '1.25'

jobs:
  staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image for staging
      run: |
        docker build -t melodia-api:staging-${{ github.event.number }} .
        echo "Staging image built successfully"

    - name: Deploy to staging environment
      run: |
        echo "Deploying to staging environment..."
        echo "PR: #${{ github.event.number }}"
        echo "Branch: ${{ github.head_ref }}"
        echo "Commit: ${{ github.sha }}"
        # AquÃ­ puedes agregar comandos para deployar a staging
        echo "Staging deployment completed!"

    - name: Comment PR with staging info
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸš€ **Staging Deployment**
            
            âœ… **Environment**: Staging
            âœ… **PR**: #${{ github.event.number }}
            âœ… **Branch**: ${{ github.head_ref }}
            âœ… **Image**: melodia-api:staging-${{ github.event.number }}
            
            Your changes are now available in the staging environment for testing!
            
            _Generated by GitHub Actions_`
          });
